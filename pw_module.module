<?php
/**
 * @file
 * Custom code for the PackWeb module.
 */

/**
 * Implements hook_block_info().
 */
function pw_module_block_info() {
  return array(
    'packweb' => array(
      'info' => t('PackWeb'),
      'description' => t('"Site by PackWeb" link.'),
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function pw_module_block_view($delta = '', $settings = array(), $contexts = array()) {
  $block = array();

  if ($delta == 'packweb') {
    $block['subject'] = NULL;
    $block['content'] = t('Site by <a href="https://packweb.eu/">PackWeb</a>.');
  }

  return $block;
}

/**
 * Implements hook_form_FORM_ID_alter() for node_type_form.
 */
function pw_module_form_node_type_form_alter(&$form, &$form_state, $form_id) {
  // Disable creation of the default Body field.
  $form['body']['#value'] = FALSE;
}

/**
 * Implements hook_token_info_alter().
 */
function pw_module_token_info_alter(&$data) {
  // Setup 'node:body-image' token.
  $data['tokens']['node']['body-image'] = array(
    'name' => t('Body image'),
    'description' => t('The URL of the first image tag in the Body field.'),
  );
}

/**
 * Implements hook_tokens_alter().
 */
function pw_module_tokens_alter(array &$replacements, array $context) {
  if ($context['type'] == 'node' && !empty($context['data']['node'])) {
    $node = $context['data']['node'];

    // Replace 'node:summary' token with 'field_body' value.
    if (isset($context['tokens']['summary']) && isset($node->field_body)) {
      $body = field_get_items('node', $node, 'field_body');

      if (!empty($body[0]['safe_summary'])) {
        $replacements[$context['tokens']['summary']] = $body[0]['safe_summary'];
      }
      elseif (!empty($body[0]['safe_value'])) {
        module_load_include('inc', 'views', 'includes/utility');
        $trim_settings = array(
          'max_length' => 200,
          'word_boundary' => TRUE,
          'ellipsis' => TRUE,
          'html' => TRUE,
        );
        $replacements[$context['tokens']['summary']] = views_trim_text($trim_settings, strip_tags($body[0]['safe_value'], '<p><br><a>'));
      }
    }

    // Replace 'node:body' token with 'field_body' value.
    if (isset($context['tokens']['body']) && isset($node->field_body)) {
      $body = field_get_items('node', $node, 'field_body');

      if (!empty($body[0]['safe_value'])) {
        $replacements[$context['tokens']['body']] = $body[0]['safe_value'];
      }
    }

    // Create 'node:body-image' token.
    if (isset($context['tokens']['body-image'])) {
      if (isset($node->field_body)) {
        $body = field_get_items('node', $node, 'field_body');
      }
      else {
        $body = field_get_items('node', $node, 'body');
      }

      // Get first image URL.
      // @see https://stackoverflow.com/a/10131137/4168619
      if (!empty($body[0]['safe_value'])) {
        $doc = new DOMDocument();
        $doc->loadHTML($body[0]['safe_value']);
        $xpath = new DOMXPath($doc);
        $src = $xpath->evaluate('string(//img/@src)');

        if (!empty($src)) {
          $replacements[$context['tokens']['body-image']] = $src;
        }
      }
    }
  }
}

